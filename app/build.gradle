apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../dependencies.gradle'

android {
  compileSdkVersion versions.compileSdk
  defaultConfig {
    applicationId "com.skydoves.marvelheroes"
    minSdkVersion versions.minSdk
    targetSdkVersion versions.compileSdk
    versionCode versions.versionCode
    versionName versions.versionName
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = "1.8"
  }
  buildFeatures {
    dataBinding = true
  }
  androidExtensions {
    experimental = true
  }
  sourceSets {
    androidTest.java.srcDirs += "src/test-common/java"
    test.java.srcDirs += "src/test-common/java"
    test.assets.srcDirs += files("$projectDir/schemas".toString())
  }
  testOptions {
    unitTests {
      includeAndroidResources = true
      returnDefaultValues = true
    }
  }
}

dependencies {
  // android supports
  implementation "com.google.android.material:material:$versions.materialVersion"
  implementation "androidx.constraintlayout:constraintlayout:$versions.constraintVersion"

  // architecture components
  implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
  implementation "androidx.room:room-runtime:$versions.roomVersion"
  kapt "androidx.room:room-compiler:$versions.roomVersion"
  testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"

  // koin
  implementation "org.koin:koin-android:$versions.koinVersion"
  implementation "org.koin:koin-android-scope:$versions.koinVersion"
  implementation "org.koin:koin-android-viewmodel:$versions.koinVersion"

  // network
  implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
  implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
  implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
  implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
  testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockWebServerVersion"

  // coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

  // glide
  implementation "com.github.bumptech.glide:glide:$versions.glideVersion"
  kapt "com.github.bumptech.glide:compiler:$versions.glideVersion"

  // transformation
  implementation "com.github.skydoves:transformationlayout:$versions.transformationLayout"

  // whatIf
  implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

  // bundler
  implementation "com.github.skydoves:bundler:$versions.bundlerVersion"

  // android veil
  implementation "com.github.skydoves:androidveil:$versions.androidVeilVersion"

  // discrete scrollview
  implementation "com.yarolegovich:discrete-scrollview:$versions.discreteScrollview"

  // debugging
  implementation "com.jakewharton.timber:timber:$versions.timberVersion"

  // unit test
  testImplementation "junit:junit:$versions.junitVersion"
  testImplementation "androidx.test:core:$versions.androidxTest"
  testImplementation "org.robolectric:robolectric:$versions.robolectricVersion"
  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlinVersion"
  testImplementation "org.mockito:mockito-inline:$versions.mockitoInlineVersion"
}
